{"version":3,"sources":["components/User.js","components/UserList.js","components/UserDetail.js","components/FilterByName.js","components/FilterByGender.js","components/FilterByCities.js","components/Filters.js","services/api.js","services/local-storage.js","components/App.js","index.js"],"names":["User","props","to","user","id","className","src","image","alt","name","title","city","gender","UserList","userElements","users","map","UserDetail","email","username","country","FilterByName","htmlFor","type","value","filterName","onChange","ev","handleFilter","target","key","FilterByGender","filterGender","FilterByCities","handleChange","cities","index","checked","filterCities","includes","Filters","getApiData","fetch","then","response","json","data","results","login","uuid","location","picture","large","first","last","objToExport","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","ls","setUsers","setFilterName","setFilterGender","setFilterCities","useEffect","length","usersData","filteredUsers","filter","toLowerCase","exact","path","userCities","Set","getCities","newFilterCities","push","render","routeUserId","match","params","userId","foundUser","find","undefined","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.46e53f10.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst User = props => {\n  const getGender = () => {\n    if (props.user.gender === 'female') {\n      return 'Mujer';\n    } else if (props.user.gender === 'male') {\n      return 'Hombre';\n    } else {\n      return 'No binario';\n    }\n  };\n\n  return (\n    <Link to={`/user/${props.user.id}`}>\n      <article className=\"card\">\n        <img\n          className=\"card__img\"\n          src={props.user.image}\n          alt={`Foto de ${props.user.name}`}\n          title={`Foto de ${props.user.name}`}\n        />\n        <h4 className=\"card__title\">{props.user.name}</h4>\n        <p className=\"card__description\">\n          {props.user.city} / {getGender()}\n        </p>\n      </article>\n    </Link>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport User from './User';\n\nconst UserList = props => {\n  const userElements = props.users.map(user => {\n    return (\n      <li key={user.id}>\n        <User user={user} />\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <ul className=\"cards\">{userElements}</ul>\n    </section>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UserDetail = props => {\n  return (\n    <div className=\"card\">\n      <Link to=\"/\">Volver al inicio</Link>\n      <header>\n        <h2>{props.user.name}</h2>\n      </header>\n      <section>\n        <img className=\"card__img\" src={props.user.image} alt={props.user.name} />\n        <h4 className=\"card__title\">{props.user.name}</h4>\n        <ul className=\"ml-1 mt-1\">\n          <li>Género: {props.user.gender}</li>\n          <li>Email: {props.user.email}</li>\n          <li>Nick: {props.user.username}</li>\n          <li>Ciudad: {props.user.city}</li>\n          <li>País: {props.user.country}</li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default UserDetail;\n","import React from 'react';\n\nconst FilterByName = props => {\n  const handleChange = ev => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'name'\n    });\n  };\n  return (\n    <>\n      <label className=\"form__label display-block\" htmlFor=\"name\">\n        Filtrar por nombre:\n      </label>\n      <input\n        className=\"form__input-text\"\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        value={props.filterName}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default FilterByName;\n","import React from 'react';\n\nconst FilterByGender = props => {\n  const handleChange = ev => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'gender'\n    });\n  };\n  return (\n    <>\n      <label className=\"form__label display-block\" htmlFor=\"gender\">\n        Género:\n      </label>\n\n      <select\n        className=\"form__input-text\"\n        name=\"gender\"\n        id=\"gender\"\n        value={props.filterGender}\n        onChange={handleChange}\n      >\n        <option value=\"\">Todos</option>\n        <option value=\"female\">Mujer</option>\n        <option value=\"male\">Hombre</option>\n        <option value=\"no-binary\">No binario</option>\n      </select>\n    </>\n  );\n};\n\nexport default FilterByGender;\n","import React from 'react';\n\nconst FilterByCities = props => {\n  const handleChange = ev => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'city'\n    });\n  };\n\n  const renderCities = () => {\n    return props.cities.map((city, index) => {\n      return (\n        <li key={index}>\n          <label>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              name=\"city\"\n              value={city}\n              checked={props.filterCities.includes(city)}\n              onChange={handleChange}\n            />\n            {city}\n          </label>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <>\n      <label className=\"form__label display-block\" htmlFor=\"gender\">\n        Ciudad:\n      </label>\n      <ul className=\"filterCities\">{renderCities()}</ul>\n    </>\n  );\n};\n\nexport default FilterByCities;\n","import React from 'react';\nimport FilterByName from './FilterByName';\nimport FilterByGender from './FilterByGender';\nimport FilterByCities from './FilterByCities';\n\nconst Filters = props => {\n  return (\n    <section>\n      <form>\n        <FilterByName filterName={props.filterName} handleFilter={props.handleFilter} />\n        <FilterByGender filterGender={props.filterGender} handleFilter={props.handleFilter} />\n        <FilterByCities\n          filterCities={props.filterCities}\n          cities={props.cities}\n          handleFilter={props.handleFilter}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Filters;\n","const getApiData = () => {\r\n  return (\r\n    fetch('https://randomuser.me/api/?results=10')\r\n      // He quitado el https: de la URL anterior\r\n      // Si quieres saber por qué visita https://books.adalab.es/materiales-del-curso-m/-MWwxsiZJuVMKjilarms/despues_de_acabar_el_curso/errores_comunes_en_programacion#mixed-content-http-vs-https\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const cleanData = data.results.map(user => {\r\n          return {\r\n            id: user.login.uuid,\r\n            gender: user.gender,\r\n            email: user.email,\r\n            city: user.location.city,\r\n            country: user.location.country,\r\n            image: user.picture.large,\r\n            name: `${user.name.first} ${user.name.last}`\r\n          };\r\n        });\r\n        return cleanData;\r\n      })\r\n  );\r\n};\r\n\r\nexport default getApiData;\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst objToExport = {\r\n  get: get,\r\n  set: set\r\n};\r\n\r\nexport default objToExport;\r\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// components\nimport UserList from './UserList';\nimport UserDetail from './UserDetail';\nimport Filters from './Filters';\n// services\nimport getApiData from '../services/api';\nimport ls from '../services/local-storage';\n\nconst App = () => {\n  // state\n\n  const [users, setUsers] = useState(ls.get('users', []));\n  const [filterName, setFilterName] = useState(ls.get('filterName', ''));\n  const [filterGender, setFilterGender] = useState(ls.get('filterGender', ''));\n  const [filterCities, setFilterCities] = useState(ls.get('filterCities', []));\n\n  // effects\n\n  useEffect(() => {\n    if (users.length === 0) {\n      getApiData().then(usersData => {\n        setUsers(usersData);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set('users', users);\n  }, [users]);\n\n  // useEffect(() => {\n  //   ls.set('filterName', filterName);\n  // }, [filterName]);\n\n  // useEffect(() => {\n  //   ls.set('filterGender', filterGender);\n  // }, [filterGender]);\n\n  // useEffect(() => {\n  //   ls.set('filterCities', filterCities);\n  // }, [filterCities]);\n\n  useEffect(() => {\n    ls.set('users', users);\n    ls.set('filterName', filterName);\n    ls.set('filterGender', filterGender);\n    ls.set('filterCities', filterCities);\n  }, [users, filterName, filterGender, filterCities]);\n\n  // useEffect(() => {\n  //   ls.set('users', users);\n  //   ls.set('filterName', filterName);\n  //   ls.set('filterGender', filterGender);\n  //   ls.set('filterCities', filterCities);\n  // });\n\n  // event handlers\n\n  const handleFilter = data => {\n    if (data.key === 'name') {\n      setFilterName(data.value);\n    } else if (data.key === 'gender') {\n      setFilterGender(data.value);\n    } else if (data.key === 'city') {\n      if (filterCities.includes(data.value)) {\n        const newFilterCities = filterCities.filter(city => city !== data.value);\n        setFilterCities(newFilterCities);\n      } else {\n        filterCities.push(data.value);\n        setFilterCities([...filterCities]);\n      }\n    }\n  };\n\n  // render\n\n  const filteredUsers = users\n    .filter(user => {\n      return user.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter(user => {\n      if (filterGender === '') {\n        return true;\n      } else {\n        return user.gender === filterGender;\n      }\n      // return filterGender === '' ? true : user.gender === filterGender\n    })\n    .filter(user => {\n      if (filterCities.length === 0) {\n        return true;\n      } else {\n        return filterCities.includes(user.city);\n      }\n    });\n\n  const renderUserDetail = props => {\n    const routeUserId = props.match.params.userId;\n    const foundUser = users.find(user => {\n      return user.id === routeUserId;\n    });\n\n    if (foundUser !== undefined) {\n      return <UserDetail user={foundUser} />;\n    } else {\n      return <p>Usuaria no encontrada</p>;\n    }\n  };\n\n  const getCities = () => {\n    const userCities = users.map(user => user.city);\n    let uniqueCities = [...new Set(userCities)];\n    return uniqueCities;\n  };\n\n  return (\n    <>\n      <h1 className=\"title--big\">Directorio de personas</h1>\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"col2\">\n            <Filters\n              filterName={filterName}\n              filterGender={filterGender}\n              filterCities={filterCities}\n              cities={getCities()}\n              handleFilter={handleFilter}\n            />\n            <UserList users={filteredUsers} />\n          </div>\n        </Route>\n        <Route path=\"/user/:userId\" render={renderUserDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport './stylesheets/index.scss';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}